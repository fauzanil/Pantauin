/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8-dev at Tue Dec 27 10:17:51 2016. */

#ifndef PB_PANTAUINMESSAGE_PB_H_INCLUDED
#define PB_PANTAUINMESSAGE_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Pantauin {
    int32_t id;
    float sensorValue;
    bool has_nodeStatus;
    bool nodeStatus;
/* @@protoc_insertion_point(struct:Pantauin) */
} Pantauin;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Pantauin_init_default                    {0, 0, false, 0}
#define Pantauin_init_zero                       {0, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Pantauin_id_tag                          1
#define Pantauin_sensorValue_tag                 2
#define Pantauin_nodeStatus_tag                  3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Pantauin_fields[4];

/* Maximum encoded size of messages (where known) */
#define Pantauin_size                            18

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PANTAUINMESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
